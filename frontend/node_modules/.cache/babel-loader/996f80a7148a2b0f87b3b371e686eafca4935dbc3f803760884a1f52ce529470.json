{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rbnsi\\\\Documents\\\\web-dev\\\\cv-creator-v3\\\\cv-project\\\\frontend\\\\src\\\\pages\\\\AddCV.js\",\n  _s = $RefreshSig$();\nimport uniqid from \"uniqid\";\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCV = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('');\n  const [schools, setSchools] = useState([]);\n  const [schoolName, setSchoolName] = useState('');\n  const [schoolLocation, setSchoolLocation] = useState('');\n  const [schoolDegree, setSchoolDegree] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const historyDisplayPage = () => {\n    history.push(\"/\");\n  };\n  const handleAddSchool = e => {\n    e.preventDefault();\n    setSchools([...schools, {\n      name: schoolName,\n      location: schoolLocation,\n      degree: schoolDegree\n    }]);\n    setSchoolName('');\n    setSchoolLocation('');\n    setSchoolDegree('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const cv = {\n      title,\n      name,\n      schools\n    };\n    const response = await fetch('/api/cvs', {\n      method: 'POST',\n      body: JSON.stringify(cv),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json;\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setTitle('');\n      setName('');\n      setSchools([]);\n      setError(null);\n      console.log('new cv added');\n      historyDisplayPage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"new-cv-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a New CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value),\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"school-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: schoolName,\n        placeholder: \"School Name\",\n        onChange: e => setSchoolName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: schoolLocation,\n        placeholder: \"Location\",\n        onChange: e => setSchoolLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: schoolDegree,\n        placeholder: \"Degree Earned\",\n        onChange: e => setSchoolDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSchool,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add New CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-display\",\n      children: schools && schools.map(school => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: school.name\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCV, \"Xn6VYZnAFhZdBt+JwvBByhwhlYQ=\", false, function () {\n  return [useHistory];\n});\n_c = AddCV;\nexport default AddCV;\nvar _c;\n$RefreshReg$(_c, \"AddCV\");","map":{"version":3,"names":["uniqid","useState","useHistory","AddCV","title","setTitle","name","setName","schools","setSchools","schoolName","setSchoolName","schoolLocation","setSchoolLocation","schoolDegree","setSchoolDegree","error","setError","history","historyDisplayPage","push","handleAddSchool","e","preventDefault","location","degree","handleSubmit","cv","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","target","value","map","school"],"sources":["C:/Users/rbnsi/Documents/web-dev/cv-creator-v3/cv-project/frontend/src/pages/AddCV.js"],"sourcesContent":["import uniqid from \"uniqid\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AddCV = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [schools, setSchools] = useState([])\r\n    const [schoolName, setSchoolName] = useState('')\r\n    const [schoolLocation, setSchoolLocation] = useState('')\r\n    const [schoolDegree, setSchoolDegree] = useState('')\r\n  const [error, setError] = useState('')\r\n\r\n  const history = useHistory();\r\n\r\n  const historyDisplayPage = () => {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const handleAddSchool = (e) => {\r\n    e.preventDefault()\r\n\r\n    setSchools([...schools, {name: schoolName, location: schoolLocation, degree: schoolDegree}])\r\n    setSchoolName('')\r\n    setSchoolLocation('')\r\n    setSchoolDegree('')\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const cv = {title, name, schools}\r\n\r\n    const response = await fetch('/api/cvs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(cv),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    const json = await response.json\r\n\r\n    if (!response.ok) {\r\n      setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n      setTitle('')\r\n      setName('')\r\n      setSchools([])\r\n      setError(null)\r\n\r\n      console.log('new cv added')\r\n\r\n      historyDisplayPage()\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <form className=\"new-cv-form\" onSubmit={handleSubmit}>\r\n      <h3>Add a New CV</h3>\r\n\r\n      {error && <div className=\"form-error\">{error}</div>}\r\n\r\n      <label>Name:</label>\r\n      <input \r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        value={name}\r\n      />\r\n\r\n      <label>Title:</label>\r\n      <input \r\n        type=\"text\"\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        value={title}\r\n      />\r\n\r\n      <div className=\"school-entry\">\r\n        <input type=\"text\" value={schoolName} placeholder=\"School Name\" onChange={(e) => setSchoolName(e.target.value)} />\r\n        <input type=\"text\" value={schoolLocation} placeholder=\"Location\" onChange={(e) => setSchoolLocation(e.target.value)} />\r\n        <input type=\"text\" value={schoolDegree} placeholder=\"Degree Earned\" onChange={(e) => setSchoolDegree(e.target.value)} />\r\n        <button onClick={handleAddSchool}>Add</button>\r\n      </div>\r\n\r\n      <button>Add New CV</button>\r\n\r\n      <div className=\"test-display\">\r\n        {schools && schools.map((school) => {\r\n          return <div key={uniqid()}>{school.name}</div>\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default AddCV;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}